#!/bin/bash
jeshile='\e[40;38;5;82m' 
jo='\e[0m'  
red='\e[31m'
yellow='\e[0;93m'
RED='\033[0;31m'
NC='\033[0m' # No Color

sudo apt-get -y update 
sudo apt-get install -y lsb-core dialog  whiptail

echo " "
whiptail --title "MongoDB installer" --msgbox "                     https://github.com/lemp-info " 8 78
sleep 2

echo -e "${jeshile} ???????????????????????????????????????????????? \e[0m"
echo -e "${jeshile} ?               Update System                  ? \e[0m"
echo -e "${jeshile} ???????????????????????????????????????????????? \e[0m"
echo " " 

 
osname=$(lsb_release -si)
osrelease=$(lsb_release -sr)
arch=$(uname -m)
openssl=$(openssl version)
type mongod >/dev/null 2>&1 && mongodstatus="y" || mongodstatus="n"


echo " "
echo -e "${jeshile} ???????????????????????????????????????????????? \e[0m"
echo -e "${jeshile} ?            Checking System Version           ? \e[0m"
echo -e "${jeshile} ???????????????????????????????????????????????? \e[0m"
echo " " 

if [ "$osname" == "Ubuntu"  ] || [ "$osname" == "CentOS"  ]   ; then
echo -e "${jeshile} ???????????????????????????????????????????????? \e[0m"
echo -e "${jeshile} ?             Support System                   ? \e[0m"
echo -e "${jeshile} ???????????????????????????????????????????????? \e[0m"
else
echo -e "${red} ???????????????????????????????????????????????? \e[0m"
echo -e "${red} ?[+]        The system is not supported        ? \e[0m"
echo -e "${red} ???????????????????????????????????????????????? \e[0m"
exit 3  
fi 
if [[ $osrelease  = "6."* ]] ; then 
echo -e "${red} ???????????????????????????????????????????????? \e[0m"
echo -e "${red} ?[+]        The system is not supported        ? \e[0m"
echo -e "${red} ???????????????????????????????????????????????? \e[0m"
exit 3
fi
if [ "$arch" = "x86_64" ] ; then
echo " "
else
echo -e "${red} ???????????????????????????????????????????????? \e[0m"
echo -e "${red} ?[+]        The system is not supported        ? \e[0m"
echo -e "${red} ???????????????????????????????????????????????? \e[0m"
exit 3  
fi 

echo " " 

 
if [ $mongodstatus = "n" ]
then
 
echo -e "${jeshile} ???????????????????????????????????????????????? \e[0m"
echo -e "${jeshile} ?         NEW password for your MongoDB        ? \e[0m"
echo -e "${jeshile} ???????????????????????????????????????????????? \e[0m"
echo " " 

if (whiptail --title "MongoDB" --yesno "Do you want to install MongoDB ?" 8 78); then   

while true; do
    echo 
USER=$(whiptail --title " MongoDB Username" --passwordbox "Enter your New USER for the MongoDB " 10 60 3>&1 1>&2 2>&3)
  echo 
USER2=$(whiptail --title " MongoDB Username" --passwordbox "Enter your Repeat USER for the MongoDB " 10 60 3>&1 1>&2 2>&3)
 echo " "
    [ "$USER" = "$USER2" ] && break
done

while true; do
    echo 
PASS=$(whiptail --title " MongoDB Password" --passwordbox "Enter your New password for the MongoDB " 10 60 3>&1 1>&2 2>&3)
  echo 
PASS2=$(whiptail --title " MongoDB Password" --passwordbox "Enter your Repeat password for the MongoDB " 10 60 3>&1 1>&2 2>&3)
 echo " "
    [ "$PASS" = "$PASS2" ] && break
done
	
  else
   exit 		
    fi 

else
  
echo -e "${red} ???????????????????????????????????????????????? \e[0m"
echo -e "${red} ?[+]       The MongoDB is already installe      ? \e[0m"
echo -e "${red} ???????????????????????????????????????????????? \e[0m"
 
exit 5
fi



 
echo " "
echo -e "${jeshile} ???????????????????????????????????????????????? \e[0m"
echo -e "${jeshile} ?          Install MongoDB.             ? \e[0m"
echo -e "${jeshile} ???????????????????????????????????????????????? \e[0m"
echo " " 
 

if [ "$osname" == "Ubuntu"  ]  ; then 
 if [ "$osrelease" == "16.04" ]   ; then
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4 
 sleep 2
 echo " " 
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list 
 echo " " 
 sleep 1
  fi
   if [ "$osrelease" == "18.04" ]   ; then
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 68818C72E52529D4
 sleep 2
 echo " " 
sudo echo "deb http://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list
 echo " " 
 sleep 1
  fi
   if [ "$osrelease" == "20.04" ]   ; then
wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add 
 sleep 2
 echo " " 
echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list
 echo " " 
 sleep 1
  fi
sudo apt-get -y update 
 sleep 1
sudo apt-get install -y mongodb-org nano ufw 
  sleep 1
sudo systemctl start mongod
 sleep 1
sudo systemctl enable mongod
 sleep 1
export LC_ALL=C
 sleep 1
 
  mongo <<EOF
      use admin
 db.createUser({user:"$USER", pwd:"$PASS", roles:[{role:"root", db:"admin"}]})
  
EOF

  

sed -i 's/mongod --config/mongod --auth --config/g'   /lib/systemd/system/mongod.service
 sleep 1
sed -i 's/127.0.0.1/0.0.0.0/g' /etc/mongod.conf
 sleep 1
sed -i 's/#security:/security:\n authorization: enabled/g' /etc/mongod.conf
 sleep 1
sudo systemctl daemon-reload
 sleep 1
sudo service mongod restart


 
   fi
  



 

exit 1
